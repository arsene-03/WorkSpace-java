package com.green.view;

import com.green.controller.ControllerBuyer;
import com.green.dto.Product;
import com.green.main.Main;
import com.green.storiage.Storage;

public class ViewBuyer {

	public static int menu() {
		System.out.println("저희 쇼핑몰에 오신것을 환영합니다.");
		System.out.println("1. 물품목록 보기");
		System.out.println("2. 장바구니 보기");
		System.out.println("3. 개인정보 보기");
		System.out.println("4. 로그아웃");
		int selectNum = Integer.parseInt(Main.scan.nextLine());
		
		return selectNum;
	}

	public static void userError() {
		System.out.println("잘못 입력했습니다.");
		System.out.println("다시 확인해 주세요.");
		
	}

	public static void productList() {
		System.out.println("저희 쇼핑몰의 등록된 물품리스트 입니다.");
		for(int i=0;i<Storage.products.size();i++) {
			System.out.println((i+1)+"번째 물품 입니다.");
			System.out.println("물품명 : "+Storage.products.get(i).getProductName());
			System.out.println("정가 : "+Storage.products.get(i).getPrice());
			System.out.println("수량 : "+Storage.products.get(i).getAmount());
			System.out.println("***************************");
			
		}
		System.out.println("***************************");
		System.out.println("원하시는 상품의 이름을 입력해주세요.");
		System.out.println("('메뉴' 를 입력하시면 메뉴로 돌아갑니다.)");
		
		String selectName = Main.scan.nextLine();
		
		Product product = null;
		
		if(selectName.equals("메뉴")) {
			return;
		}else {
			product = searchProduct(selectName);
		}
		if(product == null) {
			return;
		}
		
		putBasket(product);
		
		
	}

	private static void putBasket(Product product) { // 해당 물품을 구매하는 메서드
		System.out.println("구매 수량을 입력하세요");
		int amout = Integer.parseInt(Main.scan.nextLine());
		
		if(amout> product.getAmount()) {
			System.out.println("재고 수량이 부족합니다.");
			return;
		}
		
		System.out.println("장바구니에 담으시겠습니까?(y/n)");
		String putBaket = Main.scan.nextLine();
		if(putBaket.equals("Y") || putBaket.equals("y")) {
			//장바구니에 담는내용
			Storage.buyers.get(ControllerBuyer.session).putBasket(product);
			//장바구니에 담은만큼 재고수량을 줄여야함
			searchProduct(product,amount);
			
			
		}else if (putBaket.equals("N") || putBaket.equals("n")) {
			
		}
		
		
	}
private static void searchProduct(Product product, int amount) {
	for(int i =0 ;Storage.products.size() ;i++) {
		Storage.products.get(i).setAmount(amount);
	}
}
	
	
	
	private static Product searchProduct(String selectName) {
		int idx = -1;
		for(int i=0;i<Storage.products.size();i++) {
			if(Storage.products.get(i).getProductName().equals(selectName)) {
				idx = i;
				return Storage.products.get(i);
					
			}
		}
		if(idx == -1) {
			System.out.println("해당 물품이 없습니다. 다시 확인해주세요");
			
		}
		return null;
	}

	

}
